<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Update Profile</title>
    <style>
        .profile-image {
            width: 200px;
            height: 200px;
            border-radius: 50%;
            object-fit: cover;
            display: block;
            margin-bottom: 10px;
        }
        .hidden {
            display: none;
        }
    </style>
</head>
<body>
    <h1>Update Profile</h1>

    <!-- Profile Update Form -->
    <form action="/profiles/update" method="post" enctype="multipart/form-data">
        <label>First Name:</label>
        <input type="text" name="firstName" value="{{ user.firstName }}" required>

        <label>Last Name:</label>
        <input type="text" name="lastName" value="{{ user.lastName }}" required>

        <!-- Display Existing Profile Image -->
        <img id="profileImage" src="{{ user.image }}" alt="Profile Image" class="profile-image">


        <!-- Button to Choose Upload Method -->
        <button type="button" onclick="chooseUploadMethod()">Choose Profile Image</button>

        <!-- File Upload Input (Hidden) -->
        <input type="file" name="image" id="fileInput" class="hidden" accept="image/*" onchange="previewImage(event)">

        <!-- Webcam Capture Section (Hidden by Default) -->
        <div id="cameraSection" class="hidden">
            <video id="video" width="200" height="200" autoplay></video>
            <canvas id="canvas" class="hidden"></canvas>
            <button type="button" onclick="capturePhoto()">Capture</button>
        </div>

        <!-- Captured Image Display -->
        <img id="capturedImage" class="profile-image hidden"/>

        <!-- Hidden input to store captured image -->
        <input type="hidden" name="capturedImage" id="capturedImageInput">

        <button type="submit">Update</button>
    </form>

    <a href="/profiles/profile">
        <button type="button">Cancel</button>
    </a>

    <script>
        let videoStream = null;

        function chooseUploadMethod() {
            // Ask the user whether they want to upload or take a new photo
            let choice = confirm("Do you want to take a new photo? Click 'OK' for camera, 'Cancel' to upload.");

            if (choice) {
                openCamera();
            } else {
                document.getElementById('fileInput').click();
            }
        }

        function openCamera() {
            document.getElementById('cameraSection').classList.remove("hidden");
            navigator.mediaDevices.getUserMedia({ video: true })
                .then(stream => {
                    videoStream = stream;
                    document.getElementById('video').srcObject = stream;
                })
                .catch(err => console.error("Error accessing camera:", err));
        }

        function capturePhoto() {
            let video = document.getElementById('video');
            let canvas = document.getElementById('canvas');
            let context = canvas.getContext('2d');

            // Capture the image from the video stream
            canvas.width = video.videoWidth;
            canvas.height = video.videoHeight;
            context.drawImage(video, 0, 0, canvas.width, canvas.height);
    
            // Convert to base64
            let imageData = canvas.toDataURL("image/png");

            // Display captured image as profile image
            let profileImage = document.getElementById('profileImage');
            profileImage.src = imageData;

            // Stop the camera
            if (videoStream) {
                videoStream.getTracks().forEach(track => track.stop());
            }

            // Hide video section
            document.getElementById('cameraSection').classList.add("hidden");

            // Send captured image to hidden input for form submission
            document.getElementById('capturedImageInput').value = imageData;
        }
        function previewImage(event) {
            let file = event.target.files[0];
            if (file) {
                let reader = new FileReader();
                reader.onload = function(e) {
                    document.getElementById('profileImage').src = e.target.result;
                };
                reader.readAsDataURL(file);
            }
        }
    </script>

</body>
</html>
